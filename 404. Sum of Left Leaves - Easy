
/**
 * Find the sum of all left leaves in a given binary tree.
 *
 * Example:
 *
 *     3
 *    / \
 *   9  20
 *     /  \
 *    15   7
 *
 * There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.
 *
 */
public class SumOfLeftLeaves {
	/**
	 * Use DFS to traverse the binary tree, and add the values of left leaves
	 *
	 * Time: O(n)
	 * Space: O(1)
	 */
	public int sumOfLeftLeaves(TreeNode root) {
		if (root == null) {
			return 0;
		}

		int[] sum = {0};
		helper(root, sum);
		return sum[0];
	}

	private void helper(TreeNode root, int[] sum){
		if (root == null) {
			return;
		}

		// Determine if adding the value of the left leave
		if (root.left != null &&
			(root.left.left == null && root.left.right == null)){
			sum[0] += root.left.value;
		}

		helper(root.left, sum);
		helper(root.right, sum);
	}
}
