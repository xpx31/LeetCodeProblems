
/*
Write a function that takes a string as input and reverse only the vowels of a string.

Example 1:

Input: "hello"
Output: "holle"
Example 2:

Input: "leetcode"
Output: "leotcede"
Note:
The vowels does not include the letter "y".
 */

public class ReverseVowels {
	/**
	 * Use two pointers to point to vowels in counting from the two ends respectively
	 * Case 0: not vowel
	 *   i++ or j--
	 * Case 1: vowel
	 *   switch i and j
	 *
	 * Time: O(n)
	 * Space: O(1)
	 */

	private final Set<Character> VOWELS = new HashSet<>();
	public String reverseVowels(String s) {
		if (s == null || s.length() <= 1){
			return s;
		}

		VOWELS.add('a');
		VOWELS.add('A');
		VOWELS.add('e');
		VOWELS.add('E');
		VOWELS.add('i');
		VOWELS.add('I');
		VOWELS.add('o');
		VOWELS.add('O');
		VOWELS.add('u');
		VOWELS.add('U');

		char[] c = s.toCharArray();
		int i = 0;
		int j = s.length() - 1;

		while (i < j) {
			if (isVowel(c[i]) && isVowel(c[j])){
				char tmp = c[i];
				c[i] = c[j];
				c[j] = tmp;
				i++;
				j--;
			} else if (!isVowel(c[i])){
				i++;
			} else if (!isVowel(c[j])){
				j--;
			}
		}

		return String.valueOf(c);
	}

	private boolean isVowel(char ch){
		return VOWELS.contains(ch);
	}
}
