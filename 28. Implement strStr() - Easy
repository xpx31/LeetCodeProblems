
/*
Implement strStr().

Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:

Input: haystack = "hello", needle = "ll"
Output: 2
Example 2:

Input: haystack = "aaaaa", needle = "bba"
Output: -1
Clarification:

What should we return when needle is an empty string? This is a great question to ask during an interview.

For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().


 */

public class StrStr {
	/**
	 * Use three pointers two in haystack and one in needle
	 *
	 * i: position in haystack
	 * j: position after i
	 * k: position in needle
	 *
	 * Case 0: haystack[j] == needle[k]
	 *   j++; k++;
	 * Case 1: haystack[i] != needle[k]
	 *   i++; j = i; k = 0;
	 *
	 * Time: O(n)
	 * Space: O(1)
	 */
	public int strStr(String haystack, String needle) {
		if (haystack == null || needle == null){
			return 0;
		}
		if (haystack.length() <= 0 && needle.length() <= 0){
			return 0;
		}
		if (haystack.length() <= 0){
			return -1;
		}

		int i = 0;
		int j = 0;
		int k = 0;
		while (j < haystack.length() && k < needle.length()){
			if (haystack.charAt(j) == needle.charAt(k)){
				j++;
				k++;
			} else {
				i++;
				j = i;
				k = 0;
			}
		}

		if (k == needle.length()) {
			return i;
		} else {
			return -1;
		}
	}
}
