/**
  * On a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes.
  * Each value v = grid[i][j] represents a tower of v cubes placed on top of grid cell (i, j).
  * Now we view the projection of these cubes onto the xy, yz, and zx planes.
  * projection is like a shadow, that maps our 3 dimensional figure to a 2 dimensional plane. 
  * Here, we are viewing the "shadow" when looking at the cubes from the top, the front, and the side.
  * Return the total area of all three projections.
  */

class Solution_I {
    /**
    *
    * For xy plane, the area = the number of occupied squres
    * For xz plane, the area = the sum of the largest height of each row in grid
    * For yz plane, the area = the sum of the largest height of each coloum in grid
    * The total area is the the sum of all the areas above
    *
    * Time: O(n^2)
    * Space: O(n)
    *
    */
        
    public int projectionArea(int[][] grid) {
        int area = 0;
        // Sanity Check
        if (grid == null || grid.length <= 0 || grid[0].length <= 0) {
            return area;
        }
        
        
        int area_xy = 0;
        int area_xz = 0;
        int area_yz = 0;
        
        int[] col_max = new int[grid[0].length];
        
        for (int i = 0; i < grid.length; i++) {
            int row_max = grid[i][0]; 
            
            for (int j = 0; j < grid[i].length; j++) {
                // Add area in xy plane
                if (grid[i][j] > 0) {
                    area_xy += 1;
                }
                
                // Find the max height in a row
                if (grid[i][j] > row_max){
                    row_max = grid[i][j];
                }
                
                // Find the max height in a col
                if (grid[i][j] > col_max[j]) {
                    col_max[j] = grid[i][j];
                }
            }
            
            // Add area in xz plane
            if (row_max != 0){
                area_xz += row_max;
            }
        }
            

        // Add area in yz plane
        for (int e : col_max) {
            area_yz += e;
        }

        return area_xy + area_xz + area_yz;
        
    }
}

class Solution_II {
    /**
    *
    * For xy plane, the area = the number of occupied squres
    * For xz plane, the area = the sum of the largest height of each row in grid
    * For yz plane, the area = the sum of the largest height of each coloum in grid
    * The total area is the the sum of all the areas above
    *
    */
        
    public int projectionArea(int[][] grid) {
        int area = 0;
        // Sanity Check
        if (grid == null || grid.length <= 0 || grid[0].length <= 0) {
            return 0;
        }
        
        for (int i = 0; i < grid.length; i++) {
            int area_xy = 0;
            int area_xz = 0;
            int area_yz = 0;
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] > 0) area_xy++;
                area_xz = grid[i][j] > area_xz ? grid[i][j] : area_xz;
                area_yz = grid[j][i] > area_yz ? grid[j][i] : area_yz;
            }
            area += area_xy + area_xz + area_yz;
        }
            
        return area;
    }
}
