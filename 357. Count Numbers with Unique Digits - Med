
/*

Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x < 10n.

Example:

Input: 2
Output: 91
Explanation: The answer should be the total numbers in the range of 0 ≤ x < 100,
             excluding 11,22,33,44,55,66,77,88,99
 */
public class CountUniqueDigits {
	/**
	 * For n = 1, there are 10 avalible digits to choose from to get unique numbers,
	 *   f(1) = 10
	 * For n = 2, for each 1 <= j < 9, there are 9 avaliable digits to choose from to get unique numbers,
	 *   f(2) = 9 * 9 + f(1)
	 * For n = 3, for each 1 <= k < 9, there are 8 avaliable digits to choose from to get unique numbers,
	 *   f(3) = f(2) * 8
	 *
	 * Time: O(1)
	 * Space: O(1)
	 */
	public int countNumbersWithUniqueDigits(int n) {
		if (n == 0) {
			return 1;
		}
		int res = 10;
		int ava = 9;
		int uni = 9;

		while (n-- > 1 && ava >= 0){
			uni *= ava--;
			res += uni;
		}
		return res;
	}
}
